package examples.pattern._01_Creational._01_FactoryMethod._00_Theory;

/**
 * Шаблон Factory Method - для создания объекта,
 * представляющего *внешние данные*
 * или обрабатывающего *внешние события*.
 * Представляет собой независимые объекты и зависимый от приложения объект,
 * которому независимые делегируют создание других зависимых объектов.
 *
 * Кирпичики данного сарая:
 * 1. Класс, который запускает запрос на создание.
 * Например, Application.createDocument() или CreationRequester.newProduct().
 * Он *не зависит* от приложения и создает объект косвенно,
 * при помощи экзепляра класса, реализующего интерфейс(FactoryIf)
 * 2. Интерфейс FactoryIf. *Независимый* от приложения.
 * Объявляет метод, которым CreationRequester создает объект.
 * Аргументы этого метода могут быть использованы для типа создаваемого объекта.
 * 3. Объекты, реализующие интерфейс FactoryIf.
 * *Зависят* от приложения. Создают объект.
 * 4. Конкретные объекты(продукты), ради которых и затевался вся эта фабрика.
 * Это зависимые объекты, они как правило наследуются от абстрактного класса,
 * который в свою очередь реализует интерфейс продукта.
 *
 * Реализация:
 * 1. Определение класса по конфигурации.
 * В зависимости от конфигурации, та или иная Factory создает объект.
 * Такая Factory может создавать только объект своего типа.
 * 2. Определение класса на основе данных.
 * Класс создается на основе информации, переданной в методе:
 * Application.createImage("gif").
 * Метод объекта фабрики, реализующего FactoryIf, содержит в себе if/switch,
 * где объекты создаются в зависимости от параметра метода.
 */

public class Main {
}
